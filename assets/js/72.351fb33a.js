(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{238:function(a,t,v){"use strict";v.r(t);var e=v(0),s=Object(e.a)({},(function(){var a=this.$createElement;this._self._c;return this._m(0)}),[function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("div",{staticClass:"content"},[v("h3",{attrs:{id:"谈谈变量提升"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#谈谈变量提升"}},[a._v("#")]),a._v(" 谈谈变量提升")]),a._v(" "),v("ul",[v("li",[a._v('函数声明和变量声明总是会被解释器悄悄地被"提升"到方法体的最顶部，只有被声明的变量会提升，初始化的不会')])]),a._v(" "),v("div",{staticClass:"language-javascript extra-class"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//例如")]),a._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" x "),v("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 声明 x")]),a._v("\nx "),v("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 变量 x 设置为 5")]),a._v("\n")])])]),v("h3",{attrs:{id:"typeof与instanceof的区别？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#typeof与instanceof的区别？"}},[a._v("#")]),a._v(" "),v("code",[a._v("typeof")]),a._v("与"),v("code",[a._v("instanceof")]),a._v("的区别？")]),a._v(" "),v("ul",[v("li",[v("p",[v("code",[a._v("typeof")]),a._v("用于判断数据的类型，可以返回，"),v("code",[a._v("string boolean number function object undefined")])])]),a._v(" "),v("li",[v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[a._v("typeof`在判断`null`、`array`、`object`以及函数实例`（new + 函数）`时，得到的都是`object\n")])])])]),a._v(" "),v("li",[v("p",[v("code",[a._v("instanceof")]),a._v("是用来判断数据是属于什么类型的")])])]),a._v(" "),v("h3",{attrs:{id:"继承"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[a._v("#")]),a._v(" 继承")]),a._v(" "),v("ol",[v("li",[a._v("原型链继承")]),a._v(" "),v("li",[a._v("实例继承")]),a._v(" "),v("li",[a._v("构造继承")]),a._v(" "),v("li",[a._v("寄生组合继承")]),a._v(" "),v("li",[a._v("拷贝继承")]),a._v(" "),v("li",[a._v("组合继承")])]),a._v(" "),v("h3",{attrs:{id:"数组中的-foreach-和-map-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数组中的-foreach-和-map-的区别"}},[a._v("#")]),a._v(" 数组中的 forEach 和 map 的区别")]),a._v(" "),v("h3",{attrs:{id:"js包含哪些部分"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#js包含哪些部分"}},[a._v("#")]),a._v(" "),v("code",[a._v("js")]),a._v("包含哪些部分")]),a._v(" "),v("ul",[v("li",[a._v("脚本语言,轻量化,弱类型,基于原型的动态编程语言")]),a._v(" "),v("li",[a._v("js 的基本构成部分:\n"),v("ul",[v("li",[a._v("ECMAScript:构建 js 的基本语法(逻辑，函数，事件..)")]),a._v(" "),v("li",[a._v("DOM(Document Object Model)文档对象模型:负责在和 html 进行沟通的时候如何访问和处理标签以及样式")]),a._v(" "),v("li",[a._v("BOM(Browser Object Model)浏览器对象模型:规定了 js 访问和处理浏览器对象的属性和方法")])])])]),a._v(" "),v("ul",[v("li",[v("code",[a._v("websocket")]),a._v("工作原理")])]),a._v(" "),v("p",[a._v("浏览器通过 JavaScript 向服务器发出建立 WebSocket 连接的请求，连接建立以后，客户端和服务器端就可以通过 TCP 连接直接交换数据。")]),a._v(" "),v("p",[a._v("当你获取 Web Socket 连接后，你可以通过 "),v("strong",[a._v("send()")]),a._v(" 方法来向服务器发送数据，并通过 "),v("strong",[a._v("onmessage")]),a._v(" 事件来接收服务器返回的数据。")]),a._v(" "),v("h3",{attrs:{id:"mvvm-与-mvc-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mvvm-与-mvc-的区别"}},[a._v("#")]),a._v(" mvvm 与 mvc 的区别")]),a._v(" "),v("ul",[v("li",[v("p",[v("code",[a._v("mvc")]),a._v("是单向通道，而"),v("code",[a._v("mvvm")]),a._v("是双向的，MVC 和 MVVM 的区别并不是 VM 完全取代了 C，"),v("code",[a._v("ViewModel")]),a._v("存在目的在于抽离 Controller 中展示的业务逻辑，而不是替代 Controller，其它视图操作业务等还是应该放在 Controller 中实现。也就是说 MVVM 实现的是业务逻辑组件的重用")])]),a._v(" "),v("li",[v("p",[a._v("在 MVVM 的框架下视图和模型是不能直接通信的。它们通过 ViewModel 来通信，ViewModel 通常要实现一个 observer 观察者，当数据发生变化，ViewModel 能够监听到数据的这种变化，然后通知到对应的视图做自动更新，而当用户操作视图，ViewModel 也能监听到视图的变化，然后通知数据做改动，这实际上就实现了数据的双向绑定。并且 MVVM 中的 View 和 ViewModel 可以互相通信")])])]),a._v(" "),v("h3",{attrs:{id:"搜索引擎优化（seo"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#搜索引擎优化（seo"}},[a._v("#")]),a._v(" 搜索引擎优化（SEO)")]),a._v(" "),v("ol",[v("li",[a._v("搜索引擎优化是一种利用搜索引擎的搜索规则来提高目前网站在有关搜索引擎内的自然排名的方式。SEO 是指为了从搜索引擎中获得更多的免费流量，从网站结构、内容建设方案、用户互动传播、页面等角度进行合理规划，使网站更适合搜索引擎的索引原则的行为。")])]),a._v(" "),v("h3",{attrs:{id:"seo-原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#seo-原理"}},[a._v("#")]),a._v(" SEO 原理")]),a._v(" "),v("ul",[v("li",[a._v("页面抓取： 蜘蛛向服务器请求页面，获取页面内容")]),a._v(" "),v("li",[a._v("分析入库：对获取到的内容进行分析，对优质页面进行收录")]),a._v(" "),v("li",[a._v("检索排序：当用户检索关键词时，从收录的页面中按照一定的规则进行排序，并返回给用户结果")])]),a._v(" "),v("h3",{attrs:{id:"前端数据处理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端数据处理"}},[a._v("#")]),a._v(" 前端数据处理")]),a._v(" "),v("p",[a._v("根据你的需求修改数据的格式")]),a._v(" "),v("h3",{attrs:{id:"前端常用的管理工具"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端常用的管理工具"}},[a._v("#")]),a._v(" 前端常用的管理工具")]),a._v(" "),v("p",[a._v("git（代码管理工具），swagger（接口管理工具） ，bug 提交工具（例如"),v("code",[a._v("jira Software）")])]),a._v(" "),v("h3",{attrs:{id:"js垃圾回收机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#js垃圾回收机制"}},[a._v("#")]),a._v(" "),v("code",[a._v("js")]),a._v("垃圾回收机制")]),a._v(" "),v("ul",[v("li",[a._v("垃圾回收："),v("code",[a._v("js")]),a._v("中的内存管理机制是自动在执行的，而且是不可见的，创建基本数据类型，对象，函数.......所有这些都需要内存，当不再需要某样东西的时候"),v("code",[a._v("js")]),a._v("引擎会发现并且清理它")])]),a._v(" "),v("ol",[v("li",[v("code",[a._v("js")]),a._v("中的内存管理的主要概念是可达性，可达性值就是那些以某种方式可访问或者可用的值")]),a._v(" "),v("li",[v("code",[a._v("js")]),a._v("引擎中有一个后台进程称之为垃圾回收器，他监视所有的对象，并把那些不可达的对象删除")])]),a._v(" "),v("h3",{attrs:{id:"轮询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#轮询"}},[a._v("#")]),a._v(" 轮询")]),a._v(" "),v("p",[a._v("没有状态管理，但需要实时的获取数据，就需要向服务器发送请求，就用到轮询")]),a._v(" "),v("h3",{attrs:{id:"vue-父组件调用子组件的方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue-父组件调用子组件的方法"}},[a._v("#")]),a._v(" vue 父组件调用子组件的方法")]),a._v(" "),v("ol",[v("li",[a._v("通过 ref 属性，获取组件对象，或者标签原生 dom 对象")])]),a._v(" "),v("h3",{attrs:{id:"雪碧图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#雪碧图"}},[a._v("#")]),a._v(" 雪碧图")]),a._v(" "),v("p",[a._v("css 精灵")]),a._v(" "),v("h3",{attrs:{id:"前后端分离概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前后端分离概念"}},[a._v("#")]),a._v(" 前后端分离概念")]),a._v(" "),v("p",[a._v("后端仅返回前端所需的数据，不再渲染 HTML 页面，不再控制前端的效果")])])}],!1,null,null,null);t.default=s.exports}}]);